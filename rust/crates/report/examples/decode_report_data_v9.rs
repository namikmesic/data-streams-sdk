use chainlink_data_streams_report::report::{decode_full_report, v9::ReportDataV9};
use std::error::Error;

fn main() -> Result<(), Box<dyn Error>> {
    let payload = "00090d9e8d96765a0c49e03a6ae05c82e8f8de70cf179baa632f18313e54bd690000000000000000000000000000000000000000000000000000000000d8aa8c000000000000000000000000000000000000000000000000000000030000000100000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002a0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001400009df89c92184ed9d554ad42f8e8946894af1009f83d8355d99f7f2515b8ecd00000000000000000000000000000000000000000000000000000000686d8cb800000000000000000000000000000000000000000000000000000000686d8cb800000000000000000000000000000000000000000000000000006fc9aa5ea08000000000000000000000000000000000000000000000000000523a3cf5bb582300000000000000000000000000000000000000000000000000000000689519b80000000000000000000000000000000000000000000000000e13e7ef580a17b000000000000000000000000000000000000000000000000000000197e7550c000000000000000000000000000000000000000000000cf942fe702caa1da1e81700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002465e32c3ca1f7b8205cecb3e711925c27ce7937c66919d147063193f4e41caf4ee1813923314660ae905f6d827d706a0793c08111b3311f07506e378dbd76062000000000000000000000000000000000000000000000000000000000000000214b082ae5499faa7ad545415041690602e7adaed33a477a7a8a4255b1887d189532140eef0f57d104e6ed1aca53218296540214b1f4e3437f2d88100283e7bef";
    let payload = hex::decode(payload)?;

    let (_report_context, report_blob) = decode_full_report(&payload)?;

    let report = ReportDataV9::decode(&report_blob)?;

    println!("{:#?}", report);

    // Prints:
    //
    // ReportDataV9 {
    //     feed_id: 0x0009df89c92184ed9d554ad42f8e8946894af1009f83d8355d99f7f2515b8ecd,
    //     valid_from_timestamp: 1752009912,
    //     observations_timestamp: 1752009912,
    //     native_fee: 122911937437824,
    //     link_fee: 23144981585418275,
    //     expires_at: 1754601912,
    //     nav_per_share: 1014409356248750000,
    //     nav_date: 1751932800000,
    //     aum: 15684214908922148763592727,
    //     ripcord: 0,
    // }
    //

    Ok(())
}
